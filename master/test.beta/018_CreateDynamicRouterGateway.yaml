---

# Copyright 2019 â€“ 2020 David Kent Consulting, Inc.
# All Rights Reserved.
# 
# NOTICE:  All information contained herein is, and remains
# the property of David Kent Consulting, Inc.; David Kent Cloud Solutions, Inc.;
# and its affiliates (The Company). The intellectual and technical concepts contained
# herein are proprietary to The Company and may be covered by U.S. and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from The Company.
#
# This file is subject to the terms and conditions defined in
# file 'LICENSE.txt', which is part of this source code package.

    - name: DRG Properties to Apply
      debug:
        msg: "{{ VcnProperties }}"


    - name: Get compartment OCID if available
      command: "pwsh GetActiveChildCompartment.ps1 {{ VcnProperties.compartment }} OCID"
      register: compartment_id
    - name: Results
      debug:
        msg: "{{ compartment_id }}"

    - name: Get VCN OCID if present
      command: "pwsh GetVcn.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.vcn_name }} OCID"
      register: vcn_id
    - name: Results
      debug:
        msg: "{{ vcn_id }}"

    - name: Make sure the VCN exists, abort if it does not
      oci_vcn_facts:
        vcn_id: "{{ vcn_id.stdout }}"

    - name: Get the Dynamic Router Gateway OCID if present
      command: "pwsh GetDRG.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.drg_name }} OCID"
      register: drg_id
    - name: Results
      debug:
        msg: "{{ drg_id }}"

    - name: Get the Dynamic Router Gateway object if present, if not, create it
      oci_drg_facts:
        drg_id: "{{ drg_id.stdout }}"
      register: drg_object
      ignore_errors: yes
    - name: Results
      debug:
        msg: "{{ drg_object }}"

# A VCN is not required to create the dynamic router gateway.
    - name: Create a Dynamic Router Gateway, skip if it already exists
      oci_drg:
        compartment_id:   "{{ compartment_id.stdout }}"
        display_name:     "{{ VcnProperties.drg_name }}"
      register: Results
      when: drg_object is failed
    - name: Print Results
      debug:
        msg: "{{ Results }}"

# We must re-register the var drg_id in case it did not previously exist.
    - name: Get the Dynamic Router Gateway OCID if present
      command: "pwsh GetDRG.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.drg_name }} OCID"
      register: drg_id

# Now we must attach the DRG to the VCN. We only do this if the DRG did not previously exist.
# Otherwise, we skip this step. We do not build route table entries in task 18 for the DRG.
# That is reserved for subsequent tasks.
    - name: Attach the DRG to the VCN.
      oci_drg_attachment:
        drg_id: "{{ drg_id.stdout }}"
        vcn_id: "{{ vcn_id.stdout }}"
      when: drg_object is failed
      register: Results
    - name: Results
      debug:
        msg: "{{ Results }}"