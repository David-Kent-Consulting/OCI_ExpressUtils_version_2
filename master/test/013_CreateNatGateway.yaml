---

# Copyright 2019 â€“ 2020 David Kent Consulting, Inc.
# All Rights Reserved.
# 
# NOTICE:  All information contained herein is, and remains
# the property of David Kent Consulting, Inc.; David Kent Cloud Solutions, Inc.;
# and its affiliates (The Company). The intellectual and technical concepts contained
# herein are proprietary to The Company and may be covered by U.S. and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from The Company.
#
# This file is subject to the terms and conditions defined in
# file 'LICENSE.txt', which is part of this source code package.

    - name: NAT Properties to Apply
      debug:
        msg: "{{ VcnProperties }}"


    - name: Get compartment OCID if available
      command: "pwsh GetActiveChildCompartment.ps1 {{ VcnProperties.compartment }} OCID"
      register: compartment_id
    - name: Results
      debug:
        msg: "{{ compartment_id }}"

    - name: Get VCN OCID if present
      command: "pwsh GetVcn.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.vcn_name }} OCID"
      register: vcn_id
    - name: Results
      debug:
        msg: "{{ vcn_id }}"

    - name: Make sure the VCN exists, abort if it does not
      oci_vcn_facts:
        vcn_id: "{{ vcn_id.stdout }}"

    - name: Get the NAT Gateway OCID if present
      command: "pwsh GetNGW.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.vcn_name }} {{ VcnProperties.nat_name }} OCID"
      register: nat_id
    - name: Results
      debug:
        msg: "{{ nat_id }}"

    - name: Get the NAT Gateway object if present, if not, continue
      oci_nat_gateway_facts:
        nat_gateway_id: "{{ nat_id.stdout }}"
      register: nat_object
      ignore_errors: yes
    - name: Results
      debug:
        msg: "{{ nat_object }}"
# There must only be 1 NAT gateway per VCN based on the following logic. New logic would be required
# if a client were to require multiple NAT Gateways per VCN. Note multiple NAT gateways per VCN is NOT
# a best practice and should be discouraged.
    - name: Create a NAT Gateway, skip if it already exists
      oci_nat_gateway:
        compartment_id:   "{{ compartment_id.stdout }}"
        vcn_id:           "{{ vcn_id.stdout }}"
        display_name:     "{{ VcnProperties.nat_name }}"
      ignore_errors: yes
      register: Results
      when: nat_object is failed
    - name: Print Results
      debug:
        msg: "{{ Results }}"
