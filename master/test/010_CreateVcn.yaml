---

# Copyright 2019 â€“ 2020 David Kent Consulting, Inc.
# All Rights Reserved.
# 
# NOTICE:  All information contained herein is, and remains
# the property of David Kent Consulting, Inc.; David Kent Cloud Solutions, Inc.;
# and its affiliates (The Company). The intellectual and technical concepts contained
# herein are proprietary to The Company and may be covered by U.S. and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from The Company.
#
# This file is subject to the terms and conditions defined in
# file 'LICENSE.txt', which is part of this source code package.

- name: Create a VCN
  debug:
    msg: "{{ VcnProperties }}"
# The compartment OCID is required if we have to create a VCN
- name: Get Compartment OCID
  command: "pwsh GetActiveChildCompartment.ps1 {{ VcnProperties.compartment }} OCID"
  register: compartment_id
- name: Results
  debug:
    msg: "{{ compartment_id }}"
# Get the compartment object, abort if not present
- name: Get the compartment object
  oci_compartment_facts:
    compartment_id: "{{ compartment_id.stdout }}"
  register: compartment_object
- name: Results
  debug:
    msg: "{{ compartment_object }}"
# We attempt to get the VCN OCID if present. If OCID returns, then the object fetch will work
- name: Get VCN OCID If Present
  command: "pwsh GetVcn.ps1 {{ VcnProperties.compartment }} {{ VcnProperties.vcn_name }} OCID  {{ VcnProperties.region }}"
  register: vcn_id
- name: Results
  debug:
    msg: "{{ vcn_id }}"
# We want to make sure the VCN object does not exist before creating an object. There are 
# conditions where the Ansible wrapper will create a duplicate VCN object. We build the
# logic here to avoid that.
- name: Get VCN Object If Present
  oci_vcn_facts:
    vcn_id: "{{ vcn_id.stdout }}"
    region: "{{ VcnProperties.region }}"
  register: vcn_object
  ignore_errors: yes
# If oci_vcn_facts returns as failed, then oci_vcn will create it. If it returns as suceeded,
# oci_vcn will skip the task.
- name: Create VCN
  oci_vcn:
    compartment_id: "{{ compartment_id.stdout }}"
    cidr_block: "{{ VcnProperties.vcn_cidr }}"
    display_name: "{{ VcnProperties.vcn_name }}"
    dns_label: "{{ VcnProperties.vcn_dnsName }}"
    region: "{{ VcnProperties.region }}"
  register: results
  when: vcn_object is failed
- name: See Results
  debug:
   msg: "{{ results }}"
